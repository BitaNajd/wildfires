<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fires_year_state.csv+ (Multiple Connections)' inline='true' name='federated.1vex8jw01brnse1glx7ye03bnetr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fires_year_state' name='textscan.0ocwwqm1lswj7e18qrxne12wnlyl'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='fires_year_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='temp_clean' name='textscan.0k44try15vssns1260jcz02c1mxw'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='temp_clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='deforestation_bla' name='textscan.1w1laum0vfe1en128rzwu0rlgyrg'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='deforestation_bla.csv' password='' server='' />
          </named-connection>
          <named-connection caption='co2_forest' name='textscan.0icobio1gbiceg156mt4w1hdhf0y'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='co2_forest.csv' password='' server='' />
          </named-connection>
          <named-connection caption='precipitation_brazil' name='textscan.1esjrv01ajrxg7150cqix1i949he'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='precipitation_brazil.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[fires_year_state.csv].[year]' />
                <expression op='[precipitation_brazil.csv].[year]' />
              </expression>
              <expression op='='>
                <expression op='[fires_year_state.csv].[month]' />
                <expression op='[precipitation_brazil.csv].[month]' />
              </expression>
              <expression op='='>
                <expression op='[fires_year_state.csv].[state]' />
                <expression op='[precipitation_brazil.csv].[state]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[fires_year_state.csv].[year]' />
                <expression op='[co2_forest.csv].[year]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='[fires_year_state.csv].[state]' />
                    <expression op='[deforestation_bla.csv].[state]' />
                  </expression>
                  <expression op='='>
                    <expression op='[fires_year_state.csv].[year]' />
                    <expression op='[deforestation_bla.csv].[year]' />
                  </expression>
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[fires_year_state.csv].[month]' />
                      <expression op='[temp_clean.csv].[month]' />
                    </expression>
                    <expression op='='>
                      <expression op='[fires_year_state.csv].[year]' />
                      <expression op='[temp_clean.csv].[year]' />
                    </expression>
                  </expression>
                </clause>
                <relation connection='textscan.0ocwwqm1lswj7e18qrxne12wnlyl' name='fires_year_state.csv' table='[fires_year_state#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='year' ordinal='0' />
                    <column datatype='string' name='state' ordinal='1' />
                    <column datatype='integer' name='month' ordinal='2' />
                    <column datatype='integer' name='number' ordinal='3' />
                    <column datatype='date' name='date' ordinal='4' />
                    <column datatype='string' name='country' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.0k44try15vssns1260jcz02c1mxw' name='temp_clean.csv' table='[temp_clean#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='real' name='temperature' ordinal='0' />
                    <column datatype='string' name='year' ordinal='1' />
                    <column datatype='string' name='country' ordinal='2' />
                    <column datatype='integer' name='month' ordinal='3' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.1w1laum0vfe1en128rzwu0rlgyrg' name='deforestation_bla.csv' table='[deforestation_bla#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='year' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='area' ordinal='2' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0icobio1gbiceg156mt4w1hdhf0y' name='co2_forest.csv' table='[co2_forest#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='year' ordinal='0' />
                <column datatype='real' name='co2' ordinal='1' />
                <column datatype='real' name='forest' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1esjrv01ajrxg7150cqix1i949he' name='precipitation_brazil.csv' table='[precipitation_brazil#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='real' name='precipitation' ordinal='2' />
              <column datatype='string' name='year' ordinal='3' />
              <column datatype='integer' date-parse-format='MM' name='month' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[area]' value='[deforestation_bla.csv].[area]' />
          <map key='[co2]' value='[co2_forest.csv].[co2]' />
          <map key='[country (fires_year_state.csv)]' value='[fires_year_state.csv].[country]' />
          <map key='[country]' value='[temp_clean.csv].[country]' />
          <map key='[date (precipitation_brazil.csv)]' value='[precipitation_brazil.csv].[date]' />
          <map key='[date]' value='[fires_year_state.csv].[date]' />
          <map key='[forest]' value='[co2_forest.csv].[forest]' />
          <map key='[month (precipitation_brazil.csv)]' value='[precipitation_brazil.csv].[month]' />
          <map key='[month (temp_clean.csv)]' value='[temp_clean.csv].[month]' />
          <map key='[month]' value='[fires_year_state.csv].[month]' />
          <map key='[number]' value='[fires_year_state.csv].[number]' />
          <map key='[precipitation]' value='[precipitation_brazil.csv].[precipitation]' />
          <map key='[state (deforestation_bla.csv)]' value='[deforestation_bla.csv].[state]' />
          <map key='[state (precipitation_brazil.csv)]' value='[precipitation_brazil.csv].[state]' />
          <map key='[state]' value='[fires_year_state.csv].[state]' />
          <map key='[temperature]' value='[temp_clean.csv].[temperature]' />
          <map key='[year (co2_forest.csv)]' value='[co2_forest.csv].[year]' />
          <map key='[year (deforestation_bla.csv)]' value='[deforestation_bla.csv].[year]' />
          <map key='[year (precipitation_brazil.csv)]' value='[precipitation_brazil.csv].[year]' />
          <map key='[year (temp_clean.csv)]' value='[temp_clean.csv].[year]' />
          <map key='[year]' value='[fires_year_state.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fires_year_state.csv)]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[co2_forest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (co2_forest.csv)]</local-name>
            <parent-name>[co2_forest.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2_forest.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>forest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[forest]</local-name>
            <parent-name>[co2_forest.csv]</parent-name>
            <remote-alias>forest</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (precipitation_brazil.csv)]</local-name>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (precipitation_brazil.csv)]</local-name>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation]</local-name>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (precipitation_brazil.csv)]</local-name>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month (precipitation_brazil.csv)]</local-name>
            <parent-name>[precipitation_brazil.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Area' datatype='integer' name='[area]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column datatype='string' name='[country (fires_year_state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date (Precipitation Brazil.Csv)' datatype='date' name='[date (precipitation_brazil.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Forest' datatype='real' name='[forest]' role='measure' type='quantitative' />
      <column caption='Month (Precipitation Brazil.Csv)' datatype='integer' name='[month (precipitation_brazil.csv)]' role='dimension' type='ordinal' />
      <column caption='Month (Temp Clean.Csv)' datatype='integer' name='[month (temp_clean.csv)]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
      <column caption='Precipitation' datatype='real' name='[precipitation]' role='measure' type='quantitative' />
      <column caption='State (Deforestation Bla.Csv)' datatype='string' name='[state (deforestation_bla.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Precipitation Brazil.Csv)' datatype='string' name='[state (precipitation_brazil.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Year (Co2 Forest.Csv)' datatype='string' name='[year (co2_forest.csv)]' role='dimension' type='nominal' />
      <column caption='Year (Deforestation Bla.Csv)' datatype='string' name='[year (deforestation_bla.csv)]' role='dimension' type='nominal' />
      <column caption='Year (Precipitation Brazil.Csv)' datatype='string' name='[year (precipitation_brazil.csv)]' role='dimension' type='nominal' />
      <column caption='Year (Temp Clean.Csv)' datatype='string' name='[year (temp_clean.csv)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.574627' measure-ordering='alphabetic' measure-percentage='0.425373' rowDisplayCount='50000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]&#10;[none:state:nk]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Goias&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Acre&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Bahia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sao Paulo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Minas Gerais&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Maranhao&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Ceara&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sergipe&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio de Janeiro&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Alagoas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rondonia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pernambuco&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Distrito Federal&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Tocantins&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pará&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraiba&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Piauí&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Norte&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Espirito Santo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amapa&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Roraima&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraná&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amazonas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Santa Catarina&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6BD5C194-6A99-4235-BCE2-AB64798C6DFA}' />
    </worksheet>
    <worksheet name='all_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{7EF8B178-3487-4E18-939C-4416D13DC638}' />
    </worksheet>
    <worksheet name='map_bla'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Acre&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amapa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amazonas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maranhao&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mato Grosso&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pará&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rondonia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Roraima&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tocantins&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-3570709.8317370191' min='-9049666.1810880657' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='4218404.1579734944' min='-6468942.9563513901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B01F90C-6B33-4C41-A83B-172D978BD91C}' />
    </worksheet>
    <worksheet name='map_brazil'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-733221.06419910118' min='-13523122.27308647' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='2223196.185441291' min='-5179018.0221521901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03AA3405-BA4C-4BF0-A0CC-4C7778583B8F}' />
    </worksheet>
    <worksheet name='map_top_4'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2007&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-3483435.6343733054' min='-9331283.9988590237' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='2955536.8853642903' min='-8451377.380451763' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{291D2305-0F94-4235-812D-162CEF8877AB}' />
    </worksheet>
    <worksheet name='temp_months'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='30.0' min='20.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:month:qk]</cols>
      </table>
      <simple-id uuid='{A0391DFF-43D4-43B2-9846-D8CFB4B4711A}' />
    </worksheet>
    <worksheet name='temp_years'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='27.0' min='24.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='75' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{5B9BB35E-E2ED-4A15-93B9-5CBB99D42450}' />
    </worksheet>
    <worksheet name='top_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{8800C20C-F42D-41DB-B17E-85F297D8EBD5}' />
    </worksheet>
    <worksheet name='trend_bla (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{63A225FC-F664-4939-8BBF-93CDD16C595F}' />
    </worksheet>
    <worksheet name='trend_bla1'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{BB041766-6801-48CD-8B2E-4BCD3AC1399E}' />
    </worksheet>
    <worksheet name='trend_bra'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{2C6E8EBD-4676-4B41-A094-D35E8919773A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='all_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' type='filter' values='cascading' />
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{21131F4B-655D-4991-B88A-E7C3D92D6E9D}' />
    </window>
    <window class='worksheet' name='top_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{ABB72F97-E5D2-440A-B437-32DCE8880D91}' />
    </window>
    <window class='worksheet' name='map_brazil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B9219DA-8688-4D8F-A1BA-E79C42E01838}' />
    </window>
    <window class='worksheet' name='map_top_4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C1DB0A7F-A046-4000-91D4-C5426D91DF25}' />
    </window>
    <window class='worksheet' name='map_bla'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FB310DD8-DD69-40E6-B28C-D6D237935736}' />
    </window>
    <window class='worksheet' name='temp_years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D811F30-FBA7-4637-878F-0DD6264E83AE}' />
    </window>
    <window class='worksheet' name='temp_months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BD22CE-F1C0-4E76-9493-D5A2F6EEF018}' />
    </window>
    <window class='worksheet' name='trend_bra'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='4' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{528F4187-990A-441E-AAD7-F0F15C4F88FA}' />
    </window>
    <window class='worksheet' maximized='true' name='trend_bla1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[State (group)]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{54E598A4-6EC1-4FE3-B5DF-E370E2690057}' />
    </window>
    <window class='worksheet' name='trend_bla (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='179'>
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]&#10;[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E98403EE-376F-4789-9491-25BA53FDAD6A}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5E90FA92-A411-4C91-AAA9-B0F3435C9BF3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='all_states' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map_bla' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map_brazil' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_top_4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temp_months' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOcklEQVR4nO3dWWxc12EG4P9uw1k4Q3K4bxIpUbIkWpQt1ZLdJEZqN47QFYURFA3s9KXp
      S5Ei6EtRIH3tgrZPRR8CtGgf4row2qQNWgRovWRR3MaRvEmyREviqiFFDjkz5Ox3OacPlGi5
      HKo3Q84lh+f/AIH0aOj/DDX/3Ll37rlHk1JKECnKrOeH2Bk6KPwVQEoIKaFpGuT9r0IICCGg
      aVqDh/gJIQR0XWce83Ytz1cBJCTmpiZRqrqoVAUGR0bR0xGHpmmBPiDXdWGadW20mMe8mnw+
      ezVYoTBMzUNHdw8c29mF4RHtPd8v35puYGD0JCImMNDb2cgxEQXG1/ZI0zQMDB0CALRG+gEA
      3A+mgyC4N/BE+xALQEpjAUhpLAApjQUgpbEApDQWgJTGApDSWABSGgtASmMBSGksACnN18lw
      wqng41t3IHUTwhM4fupkfVPJiPYZf2eD6gZi8QRaYxFMTX6MkiPRaojNWWFBEULAdV3mMW/X
      8nwVwHMqyBdKCIfDSA4eRltIg5Q6Z4Qxr+nztHqvCiGlhJSSBWBeU+dxJ5iUxgKQ0lgAUhoL
      QEpjAUhpLAApjQUgpbEApDQWgJTGApDSWABSGgtASmMBSGksACnN94ywW3dmEIlGUSyUMXbi
      MZjBrYxE1DD+ZoSZISTiMdi2g2qlDFdI6BpnhDGv+fN8FcAtr2M5U0BXRxzhSBj6/ZlgnBHG
      vGbP8zUaK9qOM6fbP3UbV4ihg4A7waQ0FoCUxgKQ0lgAUhoLQEpjAUhpLAApjQUgpbEApDQW
      gJTGApDSWABSGgtASmMBSGn+1wi7PY1oaytW02mcOnMWIVaHDgCfM8IsxOMxdPb0AwBCutyc
      DcYZYcxr5jx/a4SV88isldDaVkZ7R+fmTDDOCGNes+f5Go0Zbcfp8fb//45ETYbv5ElpLAAp
      jQUgpbEApDQWgJTGApDSWABSGgtASmMBSGksACktuBMzdshxPXxwewmmacAyDViGDsvUETIN
      mIa+cZu58dU0dGgAcH8NA+3+N9pDaxpoGhc4oCYqgCck7qbXYbsCjivgegKO68F2PbiegO14
      m7c5ngAkIKTcfKLLhy5nrWkapJRbimPoGizj4SJpaGsNIx4Joa01jGiLhUS0BfFYCC2WCU3b
      +H9pYKGalSZlfRc6l1JCStm0Z4MKKT8pjLvxVQi58b23cVulaqNQcVEo21grVFCoOCiUbKyX
      qrAdF0ICQkjouoZo2EI8EkLrgz/R0EZZohv/Hb//vaHr0DRA17QtpdmPZ0se9Lym2QLsNl3T
      EDINhExj2/v4/QcTQqJQtlGs2MiXbBTLNvJlG9l8BXNLa1gvVZEv2VgvViGlhLj/mmOZBmJh
      C7GwhXi0BYlYCEcGkhjqTmyWhRrL1xbgwRphXd3dWM3mMTY2Aq3JtwD7Ia/quCiWHRQrDgrl
      KlZyRcyn85hayKJiu4iGLQx2JXB0oANDPQkMdMZhmfquvd06aL/PevJ8FUBKieV7C1hZzcKw
      LIwePQZT25gVFuR7XyFEoIXb67xC2UYqncfUYhbzy+tYypUghUR3exSD3Qkc6oljpK8d8WgL
      DP1n/3fY68e3H/JqFmBlNYtQyEIi3goAcEpZXL2VwkBPJ7LZLA4fO4GIqXELsAd5niewnCth
      bimHOwtZpNJ5ZPNlRFpMHOptw1B3G0b72zHYHYdlGNAfUYz9+PiCzttSgNTiMt768TtYWFzG
      137ny4hEwjV/sNl3gg9aXrFsI7WSx8y9HGbv5bCwWoDjeujpiGGwK47Dfe0Y6WtHW6xl4zCx
      pjXV42tU3pa/Xclk8f7Vm/jGH/zutk9+2n9ikRCOD3fi+HDn5m1CSixni0il1zFzbw1vvTeD
      fLEKy9TRm2zF+Eg3nhkffuRW4qDbsgVIr2Zg6AaSHW2P/EFuAZo3r1x1cDedx9vX5nAvU8RX
      f+UskolIw3P34++z5j6A5zpwBRAKWdjutYEFOBh5k/MZfOu/ruLXPvMYnj412NCDGvvx91nz
      2fv+O2/i1X/4LioNGRbtJ+OjPfjjrzyLK5ML+OZ3r6BUcfZ6SIGqWYC25ADOfe4MuAeghmjY
      wu/9xlM4c7QXf/bKJdycW9nrIQWmZgEM4WLh7iKCu4YX7TVN0/DM48P4+peexr98/yO8+sY1
      eF5wV/3bKzULEG1LopzLsAAKSiYi+KOXPoe2WAv+9JVLSK3k93pIDbWlAFJKLC+l0dXTzckC
      itJ1Db/09DG8/MIEvvlvl/H65SkIUdc5k/ve1ue4dLCYWoSrG+qeKUcAgMN97fjGV57Fwmoe
      f/XafyOTL+/1kHbdlgJoegjJzjCuX74OtY4HUC0hy8DLL0zg4vmj+Mt/ehtXJhdR5xn0+1LN
      zwGm79yC0EwcOTLKzwGYt2m9WMXff+99hEMmXn5hAtGw1dC8nar7cwDdLWNmfhleQ4ZFzSoR
      a8Hvv3ge4yPd+JNv/Qgfz6/u9ZB2rGYBVlYXMHtjlm+BaAtN0/DZiUP42ovn8c8/+AivvXkd
      bhMfLq1ZgM7OfkR74vwgjLbV29GKP/zyZ9ASMpv6cGnNAqRXcmix87idWgYASM/F9NQd5Ndz
      mLw1zbdGBAAwdB2//tnH8NIXTuNv//1dvPnudNMdLq25E7x4dw620DF0aAgGAOHZWF3NolKy
      kehsQySWgKVxJ5h5n6g6Lr79w5solG089+QIjg4mG5rnR907wan5WaykM3jQDK9aROreKqyw
      hYW7C7s9TjoAWiwTv/X843jx2ZP410s38Y+vX0XV2f/nEtQsQIvuYfL2HB7s2ljRDjwxcQp9
      fX04efIEl0ilbSUTEXz9S08jGY/gz1/5MeaX1/Z6SI9Uc/sgDInCyjqa690c7ReGruPihTGc
      PNyFv/uP9/DUiQFcvDC218Oqaeuc4Js3UUkkYHnA0PDAtucD8YMw5vlhOx6+/cMbmF9ew29/
      cQI9yXhD8x5W34WxpIRt2zA1k1sA2rGQZeA3nxvH9ek0/vo7P8XYYCd+8dwoBrri++Jyktte
      F6i0to5QW2LbE+K4BWDez6pStXFjbhXff28GpaqLF546ijNjvY+8Ot9O1D0nODVzC5O353Bs
      4kkM92w9nAWwAMyrP09KiXuZIt54dwq372bw+GgPnjs7uusT8+u+Nmg2k0Ol4iC9tLRtAYjq
      pWka+jtb8dIXJlC1XfzkRgp/85130N4awfPnRnHiUFdgl2qp/UHY7B2kMmU8+cQ4jG3ep3EL
      wLzdzBNCYnYph9cvT2FueR2ff2IEF04NojUSakjeA7UPgwIorK1BaBoa8+6M6NN0XcNofwe+
      +qvnsFas4NKHc/iLV9/GcE8CFy+MYbBBO81bCrC2NI9rk1PIZorbzgUgaqS2WBi//MxxXLww
      hqtTy3jtreuoVF38wtkR/NxjA7B2cad5SwFi7V0Y6uuEFAYPg9KeMnQdT4z14czRXqyslfCf
      P53C935yGxNHevH5J0fQ1RbdcYayK8QwrznzqraLy5MLeOPKNDriYTx/7si2O827tj5ALSwA
      8/Yy7+Gd5tmlNTx3dhTnT356p5kFYJ4SeQ92mt+5sYDhngS+eH4MQ91xeJ7HAjBPnTxPCFyf
      TuP1K1MoV138/PggEq0RCLGxsqgQEp4QsF0BIQQ8IX2uEebamJqexcChUWRXljA4OMgCMG/f
      5kkpkcmXcenDOTiugGnoME0dhq7B0D9ZEtfQNZ9rhAkP6eUluJ7A4moOZ0+PQwjBNcKY1/R5
      vuroltcxk0qjt6sdTrmIqivQcn+1Qm4BmNfMedwHYJ7SeZzcSEpjAUhpLAApjQUgpbEApDQW
      gJTGApDSWABSGgtASmMBSGksACmNBSClsQCkNBaAlOarAFIKpObnUCoVMJdabPSYiALj6+Rs
      6TkwTAPZXAHZpSX09vfBlGJzVlhQhBBw3eCW3WHewc/zVQDPLuL2zAKOHh6E61bhCiBkbMwI
      C/oa74YR7MUamXew8/zNCf6/d9E0gDPCmHcA8nyNptarPC+bSAcBjwKR0lgAUhoLQEpjAUhp
      LAApjQUgpbEApDQWgJTGApDSWABSGgtASmMBSGksACnN34ww4WF2ehqlUhHTs/Oob0kNov3H
      38nZwkM40oK1fAWmcFAVEhY4I4x5zZ/nb42wagF3ZhfRl4xhvSLQh421wbhGGPOaPY9rhDFP
      6TzuBJPSWABSGgtASmMBSGksACmNBSClsQCkNBaAlMYCkNJYAFIaC0BKYwFIaSwAKY0FIKX5
      XCNMYi2Xgyc8VCrVRo+JKDD+1ghzq8hmVrBWqMDzHIwcGoKUMtDZYAACz2Tewc/ztQUQno21
      ooOO9hjKpTy8YJ/3RA3jawugWxEMD/ZC13T09fZD07A5HTLIGWFCCOYxb1fz/BXAsJBMJgEA
      sVgMQI2F84iaEI8CkdJYAFIaC0BKYwFIaSwAKY0FIKWxAKQ0FoCUxgKQ0lgAUhoLQErzPR9g
      eekeHNfBymq20WMiCoy/Arg2bLuKjz76GMXcCorBLfJB1FD+5gO4ZSws5ZBoDaNQqkDXGj0s
      omD4Oh3aaEng9PhxhEIheJ5AyAAXyqMDoa4lkh5MNZNSQtOC2xzsxwkVzGvuvLoWbHowGyzo
      NcKCXpSPeQc/r+5F8ogOgh3VMTU7hfev3UAQDcplUphPBXcIdj2bxuX3Pgwsb3V5AVc+uBZY
      nmeX8Pb/vBtYXj6ziA+u34LjBfN66xSz+ODaDVTdR+ftqAAeDLTHIoEUoD2ZhBnk4SdNx8jh
      w4HFWZaFkGUF8rsEgNnZWbh2GU5AV/jQdAtedR3lajDH0O1yGbZTRnpl/ZH329GirX09ncgU
      7EA+Tl5dyqJU8SDRjiBqIFwX2VweyWRbII/P8wQ6O7sCSNpw5NhJ9A+VYQX0ljwcjSHZ1YvW
      SDDrBEc7+9FfctDbnXjk/bgPQErjuUCkNBaAlPa/sdmZdB2SgAIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='temp_years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top_states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bla (2)' width='192'>
      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
      Xg3TimY+YRWAEIK3L2xnbf6GcC4DMHwCFdkrOFS7P9xLGRVffQNKRsaQ16xF8/BEzgETxi8B
      qF43tXUNDPT3cKWuEVdvF929LjrbWnB71QlPXtt5mRhbLEnO5AmPEUyW567mWP3hkO6p2/vb
      +Np//y0vH3uOfm9ggXi+pkbM6WlDXjNn5+CrrQ3mEmcVfrlchRD0tjfR2W0jKTGZlvZOdNWL
      ZLbT3d9ATnbWhBxJ71zYwfr8TdPGCWUz2YgyR1HbcZmsuJygjy+Ezs/3/5hPL/s8zb2NfGfH
      v7AybzWbCm73KzHH19CIuahoaOpplBO1oxPV671+NojgP34JwOf1oKoqMfGx1NfVkxBjxafL
      6ANdOOKSrmeDBZIR1ufppb6njsLU4rBZf0ZibcFGDtTuJSchL+hjv1b5O0pSyyhMKaIwpYhV
      +Wt579LbfGfXP3FL/kbWzd04ZvkXvaMDS2rq0N+zxYKSkADd3ciD5tEI/uOXAOxRsZQurkCW
      JXKz0pEkEEggxPV0SAgsJ3j/lfdZlXfLpOr9hILilAX84dQrqLoa1HTJC63nuNB6jr/Z+PfX
      f0+KpLCxcAur8tayrep/+Je3vsadJXezIm/1sJuCUFV0txvZ4Rj2e7bk5eC9fAVH8vTYSs4k
      /Lr1SpKEySRfv9NLkox8/b8DD1tWdZUDV/ayPHd1wJ8NNRbFwtykQs61nA3amC6vi+ePPMvj
      K58Y8WlnM9vYWno/f3/rN6jvruNfd/zTMJ+E8HiR7fYRf9+WuQV4qyMH4YkQlr1HVfMZ8hPn
      4rQ4wzH9uNySvz6o6ZK/Pvw0W0vvJ96RMOp7JEnCbnHwsUUP8xe3/DXH6w/zzW3/wNmmSgDU
      ttbrHuCbMedk46uPxARNhLDsP965sJ37Fz0Sjqn9Iis2h5a+ZlzefhyTFOm+mvewm+2UZ/rn
      6JMkiVh7HI8t+xytfS28VvkKb5z9I1u980i7yQJ0DdnhQO/vNxxllvD6U2YaU/4EaO5twqt5
      SY9JH//NYUKWZZZmL+N4/dFJjdPc08iO82/xUPmnAt4qSpJESnQqj698go8veYz6c0fZ2X2M
      xp76YWZaSZZRkpJQWyL5AYEy5QJ45+IONhZuQZpGlp+RWJaziverd0/YJ6DqKs8efJJPL/8c
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bla1' width='192'>
      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
      ol0ceQFEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='trend_bra' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQiElEQVR4nO3daXAb53kH8D8WF0ESAAECJChKJCVRlqj7liLZ8inL0iSWVcfOqLbixO20
      sdvONG3TGXfaTr+003jaD5lMnHHTJnEcW3ESS4pTn7KtO7Kig7op8SZIguABkrix59sPkh2r
      kixQwmIBvM9vxuMZD4h9Zrx/7L677/O+JsYYAyGcEowugBAjUQAI1ygApIQxdHd3YyDYB/Um
      N/omGgOQUhbqOofTwQSEyV5YfU0It59FfdN8tCxbglqvCxajCyRET7UNszBbG0HUJsNTXQkp
      Nh0w2VHrdQHIwRWAMQaTyZSTYgnJtzseA2ialos6CDEEDYIJ1ygAhGsUAMI1CgDhGgWAcI0C
      QLhGASBcowCUkIykgGa2TA0FoEQEh6P42x98gH2tvRSCKaAAlIBYUsTLb53Ed7avw/nuEew9
      0U0hyBIFoMjJioqX9hzH4/e2oClQhee3rcLlYIRCkCUKQBFjjOEXH1/Aolk1WH5XHQDAYhbw
      3GMrcSk4hreOtFMIboECUMQOnQ0inhKxec2ca/67xSzg+cdWoTc8SSG4BQpAkbocHMOB0314
      dssyCML109EtZgF/sW0V+kei2HXwEoXgJigARSgSS+GV98/gua0rUWa7eU+TxSzgW1tXIjye
      oBDcBAWgyIiSgpd/cxLPbFoCX1X5LT9vMQv480dXYCKRxu5DFIL/jwJQRFRNw/+804pVLfWY
      2+DL+u8sZgHPbl6GyUQGu+lKcA0KQJFgjOHdY52oLLPhoRUzp/z3gmDCNx5ZilhKxK/2X6QQ
      XJVdABhDZ3s7xiMjuNzZg2g0itHRUZ1LI593pnMYF3tHsf2hhbfdgy0IJnx90xJkRAW/3HcB
      mkYhyKopPj4+jLMXe1EzPQCnWcBYdAxOTz1m1Pmgqio1xetsaDyBH/7mJP7uybVwVdjv+PsY
      A1778BwYA57auBACx///sgqAmE5ioD+Ecmc5ogkJAb8HoiiiprYWmqrCbDbno1YuJdISXtx5
      BH+yZRkaA1U5+15NY3j1g7NgjGHHpsUwC3zeDd/xsigqBUA3qqbh+2/+HusXzcCqefU5/35N
      Y9j50TmkReWm7xNKHZ+xLwKMMby5vw31fpcuJz9wZUzwxw8tgsNuwY/faeVyTEABKFC/O9+P
      UCSOxze06Hock+lKCKqcZfjpu6e5CwEFoAD1Dk1i74lu/NlXVuTltsRkMuHxDS2oqizDT95t
      hcrRYmcUgAITTWTwo/89hee2rkR5mTVvxzWZTNi2YR78VRX40W9PQVbUvB3bSBSAAiIpKr6/
      6/f42gMLUOutzPvxTSYTHl0/F831Xnz39SOYiKfzXkO+0VOgAsEYw0/fO4Np1ZXYtLrZ8Fou
      BSP42ftnsOPhxZjf5De0Hj3RFaAAMMaw90Q3JFnFw6tmG10OTCYTWhp9+M72ddh9qA3vHess
      2cExBaAAtPWN4VjbIL65eWlBvVX3Oh34++3rMTKRxMtvnYQoK0aXlHMUAINlJAW/+Og8/mrb
      atishXcrabWYsWPTYrQ0+fBvrx7C8HjC6JJyisYABnv7aAcEE7B57Zxbf9hgvUOT+K/fnsRX
      75v/WQ9ysaMrgIFSGRmHzwbxwG1MbzZCU10V/mHHPfj4VA92H2yDqhb/+wIKgIHeOdaBB1fM
      hN1aPFu1VTps+Osn1kJWNXzvzWNIpCWjS7ojFACDxFMiTneEce/SRqNLmTKLWcAT983HPYsa
      8O+vHUZwOGp0SbeNxgAGYIzhtb3nMGuaB+sWzjC6nDsSjiTwgz3H8cjq2Vi/qMHocqaMrgAG
      GI+l0T4QwdoF040u5Y4FqivxwtN341RHGD97/wyUIhsXUADyjDGGNw+2Yds980qmE6vcbsXz
      j61EtascL+48gmgiY3RJWcsqAJoiITw8AimTQig8ClmWIYqi3rWVpJGJJIYiCSxtDhhdSk6Z
      BQFb1jbj0XVz8eLOI2jvjxhdUlayGgPIYhrtly5CNZfD7fFASU7A7HCjoT4ATdMK6u1loXtp
      z0k8sLwR86awrEmxicTSeGn3caxdMAN3L5oBh71wn3JlVZmqKGAAKioqMRIKwV/jgaoon534
      Aqf9pFMVHI4iLcmY31RjdCm68ldV4IUd9+C9Y134jzeOwgSgpcmPxbNrMbvOA4ulcM6XrK4A
      mqZCFGXYbBYoqgarxQLGGASzmZris8QYw3dfP4LtDy7MaXN7oWOMIZGW0NY3hrNdw+gbjqLS
      YcOS2bVYOKsG9T6noXcQ9Bg0T9r7I3j7aDu+/eSXjC7FUJrGMBZL4ULPCC70jCIUiaOu2oll
      zQEsmOmHx+nIaz0UgDxgjOFfXz2Eb25einq/y+hyCoqiahiKxHG6cxiXgmOIJjKYXe/FsuYA
      5jZUw2HXtyuOApAHZ7uG8bvz/fjW1pVGl1LQGGOQZBXdQ5M40xVGezACQTChud6L5uleNNS4
      4a8qz+ktEwVAZxpj+Jef7Me3n1ib98t7sft0/NAxMI7e8CSCw1GMRVOwWsxoqHGhMVCFhlo3
      pvtdX7hM/BehAOjsk4sDuBwcwzOPLDW6lJKgaQySoiI4HEVwOIruoQmExxPIiAqq3eWYPc2D
      hlo3Gmrd8LlvvXw8BUBHqqbhH/97H1546u6crOlJbowxBkXVMJnIoDs0ie7QOEKRBMZjadht
      ZjTWutEU8KCl0YcaT8U1f0sB0NHBM30IjyfwxH3z6WWhATSNIS3KGByLozs0gWNtg1g1bxq2
      fK75iAKgE1lR8c8/3o9/emYDynV+kkGyo6gaXnnvNBgD/vTLywFQAHTzzicd0DSGL6+7y+hS
      yOcwxvDB8S4MTyTx9MbFNBtUDxlJwb7WXmxabfwSJ+RaJpMJD6+aDXdFGf7zjaN0BdDDroNt
      cJbbsXHlLKNLITfBGMPxSyG6AuRaPCXhxOUQ7ivCVkeemEwmrG6ppwDk2p7Dl/CVdXNhtdBV
      sRhQAHIoEkujvT+CNS36bGhBco8CkEO7DlxtdeRwq6FiRQHIkSutjvGSa3UsdRSAHGCM4Zf7
      LuCr982nX/8ik9UUOikdR3dfCD6fFxPxNAI+D2RZhtfr1bu+otA/EkMyI6OlsXT7fEtVVgGw
      2ssBOYXRyTJ47AL6+jrh9E5HlaZB0zTc4auEorfzw3P4ow3zoKp8bCtUSrIKQCaVALPYYBcY
      IkkRdXUNyIgiTIIAgTGuX4R1DERgsZjRPL2aJrwVoawC4Kh0o6XFrXctRUfTGH69vw1f37SY
      Tv4iRYPgO3C+ZwRelwPTfE6jSyG3qXBXLCpQjDGMx9PYd6oXrR1D+JuvfYl+/YsYTYbLkqJq
      aO0Ywr5TvZAUFfcuacSa+dMLclsjkj0KwBdgjGFkMoUDrb1o7Qxj0awaPLB8JgIG7OFL9EEB
      uIGMpODk5RD2tfbCYhZw//KZWD4nQBPcShAF4CrGGAbH4vjwRDe6BsexdE4dNixpgL+q4tZ/
      TIoW1wFgjCEtKjh6oR9HLwygzGbBxpWzsHBWDcy04C8XuAyApjH0hCfw8cke9A1HsaalHusX
      N8BLC1dxp+Qeg6qaBkXVIEoqxuNpjE4mMRHPYHQyhclEBvGUiHhKwjSfEw+tmIk5M6pLZqcW
      MnVFdQXQrq4dmUxLGI+lMRZLX/l3NIlYUkQ0KUKUVVjMAuxWM7xOB3xV5fA4HfC5HPC6y+Eq
      t6HSYaNn9wRAEQVAYwzf+9UxJNIiyuxW+FwOVLvL4bv6j6vCDneFXffVhElpKZoAfHyqB6Gx
      OJ7auIh+vUnOFMWjjol4Gh8c78KT9y+gk5/kVMEHgDGGV98/i+0PLqRpByTnCj4AJy6HYDYL
      WDy71uhSSAkq6ACkMjL2HLqMZx5ZQrc+RBdZBYAxDclkEooiI55IQVVVqKqid23Y+dF5bFnb
      jEqHTfdjET5l9SJMEdMY7O9BRjaj0u2CWRWhCTY0NdSDMQZN03JeWMfAOEYnk/jG5iW6fD8h
      QLYbZcsimMWJuiorevrD8FRVwGz7w69yrpviFVXDz/eexV9uWw0wBr5b7omesnoPIItpRCZi
      cLkqIcoanBUOaJoGq82my0bZbx5og91qprX1ie6yGgNY7Q4EArUoL6+Ax+2ExWKBzWaDHsPS
      wdEYLvSM4JE1zTp8OyHXKqinQKqm4ZX3zmDHpiWwmAuqNFKibniWDfb3Q1bUvN9772/tRWPA
      jaYALcFC8uOGAZCT4zhw+Djyuc7ZeCyNfa29ePxe2lGR5M8NAzA6FkLwchD6P+m/gjGG1/ae
      xZP3L7jtHb8JuR03PNt8vgAcfiBfWzt/Ot1h0ayaPB2RkCuuuwIkJ8dw8lwXKkwaxDwUkMrI
      2HP4Mp7eSMsLkvy77gpQUeXD8kVzEYqkkY+5l2/su4DNq5vhqsjX9YaQP7jhGCAWT8DldOry
      nP/zTrUPIZWRsG7hDJ2PRMiN3TAAZVYzenqD0HMGTjSZwe6DbXh2yzLaVYUY5oYB8PhqAFnS
      LQCMMfz8g3PYes886uElhrp+EBwdQ1t7J5jFqtsY4EzXMBhjWHFXnU5HICQ71wXALJihMQZf
      jV+XeRKpjIxdB9qouZ0UhOueAimyhApnFawWmy5TIX594CLuX94ED63CRgrAdQGo9NZizWp9
      +m87BiKfLW1CSCHI25RLWVHx+t5z2PHwYlp4lhSMvJ2Jb3/SgSVzAqj3u/J1SEJuKauZZ3I6
      gc7eIJyVLsTTIgJ+LyRJQm1tdrdKQ5E4znQO44Wn776jYgnJtawCYLbZ4ax0QlI1eBw2DA72
      wumph5blRtmdA+N46qGFEMCgKPmaY0rIrWXVE5ycGEFPeBJ+jxPRpIRaXxUkSYbP79OlJ5iQ
      fCmaxXEJ0QM9jiFcowAQrlEACNcoAIRrFADCNQoA4RoFgHCNAkC4RgEgXKMAEK5RAAjXKACE
      axQAwjUKAOEaBYBwjQJAuJb1RtmT0SjEZAxdvf2QJAnpdFrv2gjRXVYdYYqUQX84AkgJWCo8
      SE8Mw+7yY8a0GqiqSiu8kaKVVVO8pioID/ajqbEBAwMDCNT5IUkZmEwmCIIAgdb5IUWKeoIJ
      1+inm3CNAkC4RgEgXKMAEK5RAAjXKACEaxQAwjUKAOEaBYBwjQJAuEYBIFyjABCuUQAI1ygA
      hGsUAMI1CgDhGgWAcC2rlkhFTGFgdBLeciuGJpII+LyQZQk+n0/v+gjRVVYBsNjLYTfHEEtl
      4LaZ0d/fBadnOrxZbpRNSKHKKgBSOoFwOAy/vxoTaRn19U0QRREmQYDAGPUEk6JFTfGEazQI
      JlyjABCuUQAI1ygAhGsUAMI1CgDhGgWAcI0CQLhGASBcowAQrlEACNcoAIRrFADCNQoA4RoF
      gHCNAkC4NqUAyGIaI2PjUBQFkiTpVRMheTOljrC+rnYwuxNaJgbB7kTj9Dqoqkr7BJOiNaUz
      1+V2YWRoCDBboKmqXjURkjdTugKoigxRVmG3WcEYg9lyJQjUE0yKFTXFE67RzTvhGgWAcI0C
      QLhGASBcowAQrlEACNcoAIRrFADCNQoA4RoFgHCNAkC4RgEgXKMAEK5RAAjXstok71OR4RDC
      EykEajyQRBl1dQG96iIkL6Z0BUjLKqor7BgKBSFpdPEgxW9KZ7G70oG4wtDY2IzKMjNod2BS
      7O6oI0zTtKya4hljMJlM9Bn6TMF95v8AOTsT/loNYNgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
