<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fires_year_state.csv+ (Multiple Connections)' inline='true' name='federated.1vex8jw01brnse1glx7ye03bnetr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fires_year_state' name='textscan.0ocwwqm1lswj7e18qrxne12wnlyl'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='fires_year_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='temp_clean' name='textscan.0k44try15vssns1260jcz02c1mxw'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='temp_clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='deforestation_bla' name='textscan.1w1laum0vfe1en128rzwu0rlgyrg'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='deforestation_bla.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[fires_year_state.csv].[state]' />
                <expression op='[deforestation_bla.csv].[state]' />
              </expression>
              <expression op='='>
                <expression op='[fires_year_state.csv].[year]' />
                <expression op='[deforestation_bla.csv].[year]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[fires_year_state.csv].[month]' />
                  <expression op='[temp_clean.csv].[month]' />
                </expression>
                <expression op='='>
                  <expression op='[fires_year_state.csv].[year]' />
                  <expression op='[temp_clean.csv].[year]' />
                </expression>
              </expression>
            </clause>
            <relation connection='textscan.0ocwwqm1lswj7e18qrxne12wnlyl' name='fires_year_state.csv' table='[fires_year_state#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='year' ordinal='0' />
                <column datatype='string' name='state' ordinal='1' />
                <column datatype='integer' name='month' ordinal='2' />
                <column datatype='integer' name='number' ordinal='3' />
                <column datatype='date' name='date' ordinal='4' />
                <column datatype='string' name='country' ordinal='5' />
              </columns>
            </relation>
            <relation connection='textscan.0k44try15vssns1260jcz02c1mxw' name='temp_clean.csv' table='[temp_clean#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='real' name='temperature' ordinal='0' />
                <column datatype='string' name='year' ordinal='1' />
                <column datatype='string' name='country' ordinal='2' />
                <column datatype='integer' name='month' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1w1laum0vfe1en128rzwu0rlgyrg' name='deforestation_bla.csv' table='[deforestation_bla#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='year' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='area' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[area]' value='[deforestation_bla.csv].[area]' />
          <map key='[country (fires_year_state.csv)]' value='[fires_year_state.csv].[country]' />
          <map key='[country]' value='[temp_clean.csv].[country]' />
          <map key='[date]' value='[fires_year_state.csv].[date]' />
          <map key='[month (temp_clean.csv)]' value='[temp_clean.csv].[month]' />
          <map key='[month]' value='[fires_year_state.csv].[month]' />
          <map key='[number]' value='[fires_year_state.csv].[number]' />
          <map key='[state (deforestation_bla.csv)]' value='[deforestation_bla.csv].[state]' />
          <map key='[state]' value='[fires_year_state.csv].[state]' />
          <map key='[temperature]' value='[temp_clean.csv].[temperature]' />
          <map key='[year (deforestation_bla.csv)]' value='[deforestation_bla.csv].[year]' />
          <map key='[year (temp_clean.csv)]' value='[temp_clean.csv].[year]' />
          <map key='[year]' value='[fires_year_state.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fires_year_state.csv)]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number (copy)' datatype='integer' name='[Number (copy)_981784764304384005]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[number]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' new-bin='true'>
          <bin default-name='false' value='&quot;Amazonia Legal&quot;'>
            <value>&quot;Acre&quot;</value>
            <value>&quot;Amapa&quot;</value>
            <value>&quot;Amazonas&quot;</value>
            <value>&quot;Maranhao&quot;</value>
            <value>&quot;Mato Grosso&quot;</value>
            <value>&quot;Pará&quot;</value>
            <value>&quot;Rondonia&quot;</value>
            <value>&quot;Roraima&quot;</value>
            <value>&quot;Tocantins&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Area' datatype='integer' name='[area]' role='measure' type='quantitative' />
      <column datatype='string' name='[country (fires_year_state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Month (Temp Clean.Csv)' datatype='integer' name='[month (temp_clean.csv)]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
      <column caption='State (Deforestation Bla.Csv)' datatype='string' name='[state (deforestation_bla.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Year (Deforestation Bla.Csv)' datatype='string' name='[year (deforestation_bla.csv)]' role='dimension' type='nominal' />
      <column caption='Year (Temp Clean.Csv)' datatype='string' name='[year (temp_clean.csv)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.56592' measure-ordering='alphabetic' measure-percentage='0.43408' rowDisplayCount='50000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]&#10;[none:state:nk]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Goias&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Acre&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Bahia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sao Paulo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Minas Gerais&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Maranhao&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Ceara&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sergipe&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio de Janeiro&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Alagoas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rondonia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pernambuco&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Distrito Federal&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Tocantins&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pará&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraiba&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Piauí&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Norte&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Espirito Santo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amapa&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Roraima&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraná&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amazonas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Santa Catarina&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='all_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{7EF8B178-3487-4E18-939C-4416D13DC638}' />
    </worksheet>
    <worksheet name='map_bla'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Acre&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amapa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amazonas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maranhao&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mato Grosso&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pará&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rondonia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Roraima&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tocantins&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='45783.610482480377' min='-14165217.096258616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='3382748.20941824' min='-4841933.8751051435' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B01F90C-6B33-4C41-A83B-172D978BD91C}' />
    </worksheet>
    <worksheet name='map_brazil'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-733221.06419910118' min='-13523122.27308647' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='2223196.185441291' min='-5179018.0221521901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03AA3405-BA4C-4BF0-A0CC-4C7778583B8F}' />
    </worksheet>
    <worksheet name='map_top_4'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2007&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-2012867.0517444666' min='-12372687.203841388' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='1442028.3801680272' min='-4553765.2280482939' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{291D2305-0F94-4235-812D-162CEF8877AB}' />
    </worksheet>
    <worksheet name='temp_months'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='30.0' min='20.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:month:qk]</cols>
      </table>
      <simple-id uuid='{A0391DFF-43D4-43B2-9846-D8CFB4B4711A}' />
    </worksheet>
    <worksheet name='temp_years'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='27.0' min='24.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='75' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{5B9BB35E-E2ED-4A15-93B9-5CBB99D42450}' />
    </worksheet>
    <worksheet name='top_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{8800C20C-F42D-41DB-B17E-85F297D8EBD5}' />
    </worksheet>
    <worksheet name='trend_bla (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{63A225FC-F664-4939-8BBF-93CDD16C595F}' />
    </worksheet>
    <worksheet name='trend_bla1'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Number (copy)' datatype='integer' name='[Number (copy)_981784764304384005]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[number]' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[Number (copy)_981784764304384005]' derivation='Sum' name='[sum:Number (copy)_981784764304384005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]' included-values='in-range'>
            <min>19999</min>
            <max>42737</max>
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{BB041766-6801-48CD-8B2E-4BCD3AC1399E}' />
    </worksheet>
    <worksheet name='trend_bra'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{2C6E8EBD-4676-4B41-A094-D35E8919773A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='all_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{21131F4B-655D-4991-B88A-E7C3D92D6E9D}' />
    </window>
    <window class='worksheet' name='top_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{ABB72F97-E5D2-440A-B437-32DCE8880D91}' />
    </window>
    <window class='worksheet' name='map_brazil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B9219DA-8688-4D8F-A1BA-E79C42E01838}' />
    </window>
    <window class='worksheet' name='map_top_4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C1DB0A7F-A046-4000-91D4-C5426D91DF25}' />
    </window>
    <window class='worksheet' maximized='true' name='map_bla'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FB310DD8-DD69-40E6-B28C-D6D237935736}' />
    </window>
    <window class='worksheet' name='temp_years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D811F30-FBA7-4637-878F-0DD6264E83AE}' />
    </window>
    <window class='worksheet' name='temp_months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BD22CE-F1C0-4E76-9493-D5A2F6EEF018}' />
    </window>
    <window class='worksheet' name='trend_bra'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='4' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{528F4187-990A-441E-AAD7-F0F15C4F88FA}' />
    </window>
    <window class='worksheet' name='trend_bla1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[State (group)]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{54E598A4-6EC1-4FE3-B5DF-E370E2690057}' />
    </window>
    <window class='worksheet' name='trend_bla (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='179'>
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]&#10;[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E98403EE-376F-4789-9491-25BA53FDAD6A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='all_states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_bla' width='192'>
      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
      qQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map_brazil' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_top_4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temp_months' width='192'>
      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
      FId0lQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='temp_years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top_states' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='trend_bla (2)' width='192'>
      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
      Xg3TimY+YRWAEIK3L2xnbf6GcC4DMHwCFdkrOFS7P9xLGRVffQNKRsaQ16xF8/BEzgETxi8B
      qF43tXUNDPT3cKWuEVdvF929LjrbWnB71QlPXtt5mRhbLEnO5AmPEUyW567mWP3hkO6p2/vb
      +Np//y0vH3uOfm9ggXi+pkbM6WlDXjNn5+CrrQ3mEmcVfrlchRD0tjfR2W0jKTGZlvZOdNWL
      ZLbT3d9ATnbWhBxJ71zYwfr8TdPGCWUz2YgyR1HbcZmsuJygjy+Ezs/3/5hPL/s8zb2NfGfH
      v7AybzWbCm73KzHH19CIuahoaOpplBO1oxPV671+NojgP34JwOf1oKoqMfGx1NfVkxBjxafL
      6ANdOOKSrmeDBZIR1ufppb6njsLU4rBZf0ZibcFGDtTuJSchL+hjv1b5O0pSyyhMKaIwpYhV
      +Wt579LbfGfXP3FL/kbWzd04ZvkXvaMDS2rq0N+zxYKSkADd3ciD5tEI/uOXAOxRsZQurkCW
      JXKz0pEkEEggxPV0SAgsJ3j/lfdZlXfLpOr9hILilAX84dQrqLoa1HTJC63nuNB6jr/Z+PfX
      f0+KpLCxcAur8tayrep/+Je3vsadJXezIm/1sJuCUFV0txvZ4Rj2e7bk5eC9fAVH8vTYSs4k
      /Lr1SpKEySRfv9NLkox8/b8DD1tWdZUDV/ayPHd1wJ8NNRbFwtykQs61nA3amC6vi+ePPMvj
      K58Y8WlnM9vYWno/f3/rN6jvruNfd/zTMJ+E8HiR7fYRf9+WuQV4qyMH4YkQlr1HVfMZ8hPn
      4rQ4wzH9uNySvz6o6ZK/Pvw0W0vvJ96RMOp7JEnCbnHwsUUP8xe3/DXH6w/zzW3/wNmmSgDU
      ttbrHuCbMedk46uPxARNhLDsP965sJ37Fz0Sjqn9Iis2h5a+ZlzefhyTFOm+mvewm+2UZ/rn
      6JMkiVh7HI8t+xytfS28VvkKb5z9I1u980i7yQJ0DdnhQO/vNxxllvD6U2YaU/4EaO5twqt5
      SY9JH//NYUKWZZZmL+N4/dFJjdPc08iO82/xUPmnAt4qSpJESnQqj698go8veYz6c0fZ2X2M
      xp76YWZaSZZRkpJQWyL5AYEy5QJ45+IONhZuQZpGlp+RWJaziverd0/YJ6DqKs8efJJPL/8c
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bla1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bra' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
