<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fires_year_state.csv+ (Multiple Connections)' inline='true' name='federated.1vex8jw01brnse1glx7ye03bnetr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fires_year_state' name='textscan.0ocwwqm1lswj7e18qrxne12wnlyl'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='fires_year_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='temp_clean' name='textscan.0k44try15vssns1260jcz02c1mxw'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='temp_clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='deforestation_bla' name='textscan.1w1laum0vfe1en128rzwu0rlgyrg'>
            <connection class='textscan' directory='C:/Users/javxs/wildfires/Data/clean_data' filename='deforestation_bla.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[fires_year_state.csv].[state]' />
                <expression op='[deforestation_bla.csv].[state]' />
              </expression>
              <expression op='='>
                <expression op='[fires_year_state.csv].[year]' />
                <expression op='[deforestation_bla.csv].[year]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[fires_year_state.csv].[month]' />
                  <expression op='[temp_clean.csv].[month]' />
                </expression>
                <expression op='='>
                  <expression op='[fires_year_state.csv].[year]' />
                  <expression op='[temp_clean.csv].[year]' />
                </expression>
              </expression>
            </clause>
            <relation connection='textscan.0ocwwqm1lswj7e18qrxne12wnlyl' name='fires_year_state.csv' table='[fires_year_state#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='year' ordinal='0' />
                <column datatype='string' name='state' ordinal='1' />
                <column datatype='integer' name='month' ordinal='2' />
                <column datatype='integer' name='number' ordinal='3' />
                <column datatype='date' name='date' ordinal='4' />
                <column datatype='string' name='country' ordinal='5' />
              </columns>
            </relation>
            <relation connection='textscan.0k44try15vssns1260jcz02c1mxw' name='temp_clean.csv' table='[temp_clean#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='real' name='temperature' ordinal='0' />
                <column datatype='string' name='year' ordinal='1' />
                <column datatype='string' name='country' ordinal='2' />
                <column datatype='integer' name='month' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1w1laum0vfe1en128rzwu0rlgyrg' name='deforestation_bla.csv' table='[deforestation_bla#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='year' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='area' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[area]' value='[deforestation_bla.csv].[area]' />
          <map key='[country (fires_year_state.csv)]' value='[fires_year_state.csv].[country]' />
          <map key='[country]' value='[temp_clean.csv].[country]' />
          <map key='[date]' value='[fires_year_state.csv].[date]' />
          <map key='[month (temp_clean.csv)]' value='[temp_clean.csv].[month]' />
          <map key='[month]' value='[fires_year_state.csv].[month]' />
          <map key='[number]' value='[fires_year_state.csv].[number]' />
          <map key='[state (deforestation_bla.csv)]' value='[deforestation_bla.csv].[state]' />
          <map key='[state]' value='[fires_year_state.csv].[state]' />
          <map key='[temperature]' value='[temp_clean.csv].[temperature]' />
          <map key='[year (deforestation_bla.csv)]' value='[deforestation_bla.csv].[year]' />
          <map key='[year (temp_clean.csv)]' value='[temp_clean.csv].[year]' />
          <map key='[year]' value='[fires_year_state.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fires_year_state.csv)]</local-name>
            <parent-name>[fires_year_state.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month (temp_clean.csv)]</local-name>
            <parent-name>[temp_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (deforestation_bla.csv)]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[deforestation_bla.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number (copy)' datatype='integer' name='[Number (copy)_981784764304384005]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[number]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' new-bin='true'>
          <bin default-name='false' value='&quot;Amazonia Legal&quot;'>
            <value>&quot;Acre&quot;</value>
            <value>&quot;Amapa&quot;</value>
            <value>&quot;Amazonas&quot;</value>
            <value>&quot;Maranhao&quot;</value>
            <value>&quot;Mato Grosso&quot;</value>
            <value>&quot;Pará&quot;</value>
            <value>&quot;Rondonia&quot;</value>
            <value>&quot;Roraima&quot;</value>
            <value>&quot;Tocantins&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Area' datatype='integer' name='[area]' role='measure' type='quantitative' />
      <column datatype='string' name='[country (fires_year_state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Month (Temp Clean.Csv)' datatype='integer' name='[month (temp_clean.csv)]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
      <column caption='State (Deforestation Bla.Csv)' datatype='string' name='[state (deforestation_bla.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Year (Deforestation Bla.Csv)' datatype='string' name='[year (deforestation_bla.csv)]' role='dimension' type='nominal' />
      <column caption='Year (Temp Clean.Csv)' datatype='string' name='[year (temp_clean.csv)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.56592' measure-ordering='alphabetic' measure-percentage='0.43408' rowDisplayCount='50000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]&#10;[none:state:nk]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Goias&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Acre&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Bahia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sao Paulo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Minas Gerais&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Maranhao&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Ceara&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Sergipe&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio de Janeiro&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Alagoas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rondonia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pernambuco&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Distrito Federal&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Tocantins&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Pará&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraiba&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Piauí&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Rio Grande do Norte&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Espirito Santo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amapa&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Roraima&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Paraná&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Amazonas&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Santa Catarina&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>([federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk] / [federated.1vex8jw01brnse1glx7ye03bnetr].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{92FF5503-308F-45A2-8B2D-D0193315C0DE}' />
    </worksheet>
    <worksheet name='all_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{7EF8B178-3487-4E18-939C-4416D13DC638}' />
    </worksheet>
    <worksheet name='map_bla'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Acre&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amapa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Amazonas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maranhao&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mato Grosso&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pará&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rondonia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Roraima&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tocantins&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='45783.610482480377' min='-14165217.096258616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='3382748.20941824' min='-4841933.8751051435' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B01F90C-6B33-4C41-A83B-172D978BD91C}' />
    </worksheet>
    <worksheet name='map_brazil'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-1126756.486011019' min='-13916657.694898389' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='2448073.5790897012' min='-4954140.6285037789' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03AA3405-BA4C-4BF0-A0CC-4C7778583B8F}' />
    </worksheet>
    <worksheet name='map_top_4'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2007&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]' field-type='quantitative' max='-2164659.2884052265' min='-12524479.440502148' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]' field-type='quantitative' max='2064376.5774765564' min='-3931417.0307397638' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' value='Number of cases'>
              <formatted-text>
                <run>Number of cases</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <lod column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
              <geometry column='[federated.1vex8jw01brnse1glx7ye03bnetr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[Latitude (generated)]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{291D2305-0F94-4235-812D-162CEF8877AB}' />
    </worksheet>
    <worksheet name='temp_months'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='30.0' min='20.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:month:qk]</cols>
      </table>
      <simple-id uuid='{A0391DFF-43D4-43B2-9846-D8CFB4B4711A}' />
    </worksheet>
    <worksheet name='temp_years'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[temperature]' derivation='Avg' name='[avg:temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]' field-type='quantitative' max='27.0' min='24.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[avg:temperature:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{5B9BB35E-E2ED-4A15-93B9-5CBB99D42450}' />
    </worksheet>
    <worksheet name='top_states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 states with most cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]'>
            <groupfilter function='level-members' level='[none:year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' value='137' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{8800C20C-F42D-41DB-B17E-85F297D8EBD5}' />
    </worksheet>
    <worksheet name='trend_bla (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{63A225FC-F664-4939-8BBF-93CDD16C595F}' />
    </worksheet>
    <worksheet name='trend_bla1'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Number (copy)' datatype='integer' name='[Number (copy)_981784764304384005]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[number]' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[Number (copy)_981784764304384005]' derivation='Sum' name='[sum:Number (copy)_981784764304384005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]' included-values='in-range'>
            <min>19999</min>
            <max>42737</max>
          </filter>
          <slices>
            <column>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{BB041766-6801-48CD-8B2E-4BCD3AC1399E}' />
    </worksheet>
    <worksheet name='trend_bra'>
      <table>
        <view>
          <datasources>
            <datasource caption='fires_year_state.csv+ (Multiple Connections)' name='federated.1vex8jw01brnse1glx7ye03bnetr' />
          </datasources>
          <datasource-dependencies datasource='federated.1vex8jw01brnse1glx7ye03bnetr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='measure' type='quantitative' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]</rows>
        <cols>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</cols>
      </table>
      <simple-id uuid='{2C6E8EBD-4676-4B41-A094-D35E8919773A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='all_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{21131F4B-655D-4991-B88A-E7C3D92D6E9D}' />
    </window>
    <window class='worksheet' name='top_states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{ABB72F97-E5D2-440A-B437-32DCE8880D91}' />
    </window>
    <window class='worksheet' name='map_brazil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B9219DA-8688-4D8F-A1BA-E79C42E01838}' />
    </window>
    <window class='worksheet' name='map_top_4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C1DB0A7F-A046-4000-91D4-C5426D91DF25}' />
    </window>
    <window class='worksheet' name='map_bla'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FB310DD8-DD69-40E6-B28C-D6D237935736}' />
    </window>
    <window class='worksheet' name='temp_years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D811F30-FBA7-4637-878F-0DD6264E83AE}' />
    </window>
    <window class='worksheet' name='temp_months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BD22CE-F1C0-4E76-9493-D5A2F6EEF018}' />
    </window>
    <window class='worksheet' name='trend_bra'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='4' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{528F4187-990A-441E-AAD7-F0F15C4F88FA}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[:Measure Names]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{066B02F2-A398-43C9-A5DE-B8C4395A44D7}' />
    </window>
    <window class='worksheet' maximized='true' name='trend_bla1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vex8jw01brnse1glx7ye03bnetr].[sum:Number (copy)_981784764304384005:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[State (group)]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{54E598A4-6EC1-4FE3-B5DF-E370E2690057}' />
    </window>
    <window class='worksheet' name='trend_bla (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='179'>
            <card pane-specification-id='0' param='[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]&#10;[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:country:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:state:nk]</field>
            <field>[federated.1vex8jw01brnse1glx7ye03bnetr].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E98403EE-376F-4789-9491-25BA53FDAD6A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='all_states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_bla' width='192'>
      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
      qQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map_brazil' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_top_4' width='192'>
      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
      wIF2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='temp_months' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='temp_years' width='192'>
      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
      /WP/D/DJ7OjD5T/EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top_states' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='trend_bla (2)' width='192'>
      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
      Xg3TimY+YRWAEIK3L2xnbf6GcC4DMHwCFdkrOFS7P9xLGRVffQNKRsaQ16xF8/BEzgETxi8B
      qF43tXUNDPT3cKWuEVdvF929LjrbWnB71QlPXtt5mRhbLEnO5AmPEUyW567mWP3hkO6p2/vb
      +Np//y0vH3uOfm9ggXi+pkbM6WlDXjNn5+CrrQ3mEmcVfrlchRD0tjfR2W0jKTGZlvZOdNWL
      ZLbT3d9ATnbWhBxJ71zYwfr8TdPGCWUz2YgyR1HbcZmsuJygjy+Ezs/3/5hPL/s8zb2NfGfH
      v7AybzWbCm73KzHH19CIuahoaOpplBO1oxPV671+NojgP34JwOf1oKoqMfGx1NfVkxBjxafL
      6ANdOOKSrmeDBZIR1ufppb6njsLU4rBZf0ZibcFGDtTuJSchL+hjv1b5O0pSyyhMKaIwpYhV
      +Wt579LbfGfXP3FL/kbWzd04ZvkXvaMDS2rq0N+zxYKSkADd3ciD5tEI/uOXAOxRsZQurkCW
      JXKz0pEkEEggxPV0SAgsJ3j/lfdZlXfLpOr9hILilAX84dQrqLoa1HTJC63nuNB6jr/Z+PfX
      f0+KpLCxcAur8tayrep/+Je3vsadJXezIm/1sJuCUFV0txvZ4Rj2e7bk5eC9fAVH8vTYSs4k
      /Lr1SpKEySRfv9NLkox8/b8DD1tWdZUDV/ayPHd1wJ8NNRbFwtykQs61nA3amC6vi+ePPMvj
      K58Y8WlnM9vYWno/f3/rN6jvruNfd/zTMJ+E8HiR7fYRf9+WuQV4qyMH4YkQlr1HVfMZ8hPn
      4rQ4wzH9uNySvz6o6ZK/Pvw0W0vvJ96RMOp7JEnCbnHwsUUP8xe3/DXH6w/zzW3/wNmmSgDU
      ttbrHuCbMedk46uPxARNhLDsP965sJ37Fz0Sjqn9Iis2h5a+ZlzefhyTFOm+mvewm+2UZ/rn
      6JMkiVh7HI8t+xytfS28VvkKb5z9I1u980i7yQJ0DdnhQO/vNxxllvD6U2YaU/4EaO5twqt5
      SY9JH//NYUKWZZZmL+N4/dFJjdPc08iO82/xUPmnAt4qSpJESnQqj698go8veYz6c0fZ2X2M
      xp76YWZaSZZRkpJQWyL5AYEy5QJ45+IONhZuQZpGlp+RWJaziverd0/YJ6DqKs8efJJPL/8c
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bla1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='trend_bra' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQiElEQVR4nO3daXAb53kH8D8WF0ESAAECJChKJCVRlqj7liLZ8inL0iSWVcfOqLbixO20
      sdvONG3TGXfaTr+003jaD5lMnHHTJnEcW3ESS4pTn7KtO7Kig7op8SZIguABkrix59sPkh2r
      kixQwmIBvM9vxuMZD4h9Zrx/7L677/O+JsYYAyGcEowugBAjUQAI1ygApIQxdHd3YyDYB/Um
      N/omGgOQUhbqOofTwQSEyV5YfU0It59FfdN8tCxbglqvCxajCyRET7UNszBbG0HUJsNTXQkp
      Nh0w2VHrdQHIwRWAMQaTyZSTYgnJtzseA2ialos6CDEEDYIJ1ygAhGsUAMI1CgDhGgWAcI0C
      QLhGASBcowCUkIykgGa2TA0FoEQEh6P42x98gH2tvRSCKaAAlIBYUsTLb53Ed7avw/nuEew9
      0U0hyBIFoMjJioqX9hzH4/e2oClQhee3rcLlYIRCkCUKQBFjjOEXH1/Aolk1WH5XHQDAYhbw
      3GMrcSk4hreOtFMIboECUMQOnQ0inhKxec2ca/67xSzg+cdWoTc8SSG4BQpAkbocHMOB0314
      dssyCML109EtZgF/sW0V+kei2HXwEoXgJigARSgSS+GV98/gua0rUWa7eU+TxSzgW1tXIjye
      oBDcBAWgyIiSgpd/cxLPbFoCX1X5LT9vMQv480dXYCKRxu5DFIL/jwJQRFRNw/+804pVLfWY
      2+DL+u8sZgHPbl6GyUQGu+lKcA0KQJFgjOHdY52oLLPhoRUzp/z3gmDCNx5ZilhKxK/2X6QQ
      XJVdABhDZ3s7xiMjuNzZg2g0itHRUZ1LI593pnMYF3tHsf2hhbfdgy0IJnx90xJkRAW/3HcB
      mkYhyKopPj4+jLMXe1EzPQCnWcBYdAxOTz1m1Pmgqio1xetsaDyBH/7mJP7uybVwVdjv+PsY
      A1778BwYA57auBACx///sgqAmE5ioD+Ecmc5ogkJAb8HoiiiprYWmqrCbDbno1YuJdISXtx5
      BH+yZRkaA1U5+15NY3j1g7NgjGHHpsUwC3zeDd/xsigqBUA3qqbh+2/+HusXzcCqefU5/35N
      Y9j50TmkReWm7xNKHZ+xLwKMMby5vw31fpcuJz9wZUzwxw8tgsNuwY/faeVyTEABKFC/O9+P
      UCSOxze06Hock+lKCKqcZfjpu6e5CwEFoAD1Dk1i74lu/NlXVuTltsRkMuHxDS2oqizDT95t
      hcrRYmcUgAITTWTwo/89hee2rkR5mTVvxzWZTNi2YR78VRX40W9PQVbUvB3bSBSAAiIpKr6/
      6/f42gMLUOutzPvxTSYTHl0/F831Xnz39SOYiKfzXkO+0VOgAsEYw0/fO4Np1ZXYtLrZ8Fou
      BSP42ftnsOPhxZjf5De0Hj3RFaAAMMaw90Q3JFnFw6tmG10OTCYTWhp9+M72ddh9qA3vHess
      2cExBaAAtPWN4VjbIL65eWlBvVX3Oh34++3rMTKRxMtvnYQoK0aXlHMUAINlJAW/+Og8/mrb
      atishXcrabWYsWPTYrQ0+fBvrx7C8HjC6JJyisYABnv7aAcEE7B57Zxbf9hgvUOT+K/fnsRX
      75v/WQ9ysaMrgIFSGRmHzwbxwG1MbzZCU10V/mHHPfj4VA92H2yDqhb/+wIKgIHeOdaBB1fM
      hN1aPFu1VTps+Osn1kJWNXzvzWNIpCWjS7ojFACDxFMiTneEce/SRqNLmTKLWcAT983HPYsa
      8O+vHUZwOGp0SbeNxgAGYIzhtb3nMGuaB+sWzjC6nDsSjiTwgz3H8cjq2Vi/qMHocqaMrgAG
      GI+l0T4QwdoF040u5Y4FqivxwtN341RHGD97/wyUIhsXUADyjDGGNw+2Yds980qmE6vcbsXz
      j61EtascL+48gmgiY3RJWcsqAJoiITw8AimTQig8ClmWIYqi3rWVpJGJJIYiCSxtDhhdSk6Z
      BQFb1jbj0XVz8eLOI2jvjxhdUlayGgPIYhrtly5CNZfD7fFASU7A7HCjoT4ATdMK6u1loXtp
      z0k8sLwR86awrEmxicTSeGn3caxdMAN3L5oBh71wn3JlVZmqKGAAKioqMRIKwV/jgaoon534
      Aqf9pFMVHI4iLcmY31RjdCm68ldV4IUd9+C9Y134jzeOwgSgpcmPxbNrMbvOA4ulcM6XrK4A
      mqZCFGXYbBYoqgarxQLGGASzmZris8QYw3dfP4LtDy7MaXN7oWOMIZGW0NY3hrNdw+gbjqLS
      YcOS2bVYOKsG9T6noXcQ9Bg0T9r7I3j7aDu+/eSXjC7FUJrGMBZL4ULPCC70jCIUiaOu2oll
      zQEsmOmHx+nIaz0UgDxgjOFfXz2Eb25einq/y+hyCoqiahiKxHG6cxiXgmOIJjKYXe/FsuYA
      5jZUw2HXtyuOApAHZ7uG8bvz/fjW1pVGl1LQGGOQZBXdQ5M40xVGezACQTChud6L5uleNNS4
      4a8qz+ktEwVAZxpj+Jef7Me3n1ib98t7sft0/NAxMI7e8CSCw1GMRVOwWsxoqHGhMVCFhlo3
      pvtdX7hM/BehAOjsk4sDuBwcwzOPLDW6lJKgaQySoiI4HEVwOIruoQmExxPIiAqq3eWYPc2D
      hlo3Gmrd8LlvvXw8BUBHqqbhH/97H1546u6crOlJbowxBkXVMJnIoDs0ie7QOEKRBMZjadht
      ZjTWutEU8KCl0YcaT8U1f0sB0NHBM30IjyfwxH3z6WWhATSNIS3KGByLozs0gWNtg1g1bxq2
      fK75iAKgE1lR8c8/3o9/emYDynV+kkGyo6gaXnnvNBgD/vTLywFQAHTzzicd0DSGL6+7y+hS
      yOcwxvDB8S4MTyTx9MbFNBtUDxlJwb7WXmxabfwSJ+RaJpMJD6+aDXdFGf7zjaN0BdDDroNt
      cJbbsXHlLKNLITfBGMPxSyG6AuRaPCXhxOUQ7ivCVkeemEwmrG6ppwDk2p7Dl/CVdXNhtdBV
      sRhQAHIoEkujvT+CNS36bGhBco8CkEO7DlxtdeRwq6FiRQHIkSutjvGSa3UsdRSAHGCM4Zf7
      LuCr982nX/8ik9UUOikdR3dfCD6fFxPxNAI+D2RZhtfr1bu+otA/EkMyI6OlsXT7fEtVVgGw
      2ssBOYXRyTJ47AL6+jrh9E5HlaZB0zTc4auEorfzw3P4ow3zoKp8bCtUSrIKQCaVALPYYBcY
      IkkRdXUNyIgiTIIAgTGuX4R1DERgsZjRPL2aJrwVoawC4Kh0o6XFrXctRUfTGH69vw1f37SY
      Tv4iRYPgO3C+ZwRelwPTfE6jSyG3qXBXLCpQjDGMx9PYd6oXrR1D+JuvfYl+/YsYTYbLkqJq
      aO0Ywr5TvZAUFfcuacSa+dMLclsjkj0KwBdgjGFkMoUDrb1o7Qxj0awaPLB8JgIG7OFL9EEB
      uIGMpODk5RD2tfbCYhZw//KZWD4nQBPcShAF4CrGGAbH4vjwRDe6BsexdE4dNixpgL+q4tZ/
      TIoW1wFgjCEtKjh6oR9HLwygzGbBxpWzsHBWDcy04C8XuAyApjH0hCfw8cke9A1HsaalHusX
      N8BLC1dxp+Qeg6qaBkXVIEoqxuNpjE4mMRHPYHQyhclEBvGUiHhKwjSfEw+tmIk5M6pLZqcW
      MnVFdQXQrq4dmUxLGI+lMRZLX/l3NIlYUkQ0KUKUVVjMAuxWM7xOB3xV5fA4HfC5HPC6y+Eq
      t6HSYaNn9wRAEQVAYwzf+9UxJNIiyuxW+FwOVLvL4bv6j6vCDneFXffVhElpKZoAfHyqB6Gx
      OJ7auIh+vUnOFMWjjol4Gh8c78KT9y+gk5/kVMEHgDGGV98/i+0PLqRpByTnCj4AJy6HYDYL
      WDy71uhSSAkq6ACkMjL2HLqMZx5ZQrc+RBdZBYAxDclkEooiI55IQVVVqKqid23Y+dF5bFnb
      jEqHTfdjET5l9SJMEdMY7O9BRjaj0u2CWRWhCTY0NdSDMQZN03JeWMfAOEYnk/jG5iW6fD8h
      QLYbZcsimMWJuiorevrD8FRVwGz7w69yrpviFVXDz/eexV9uWw0wBr5b7omesnoPIItpRCZi
      cLkqIcoanBUOaJoGq82my0bZbx5og91qprX1ie6yGgNY7Q4EArUoL6+Ax+2ExWKBzWaDHsPS
      wdEYLvSM4JE1zTp8OyHXKqinQKqm4ZX3zmDHpiWwmAuqNFKibniWDfb3Q1bUvN9772/tRWPA
      jaYALcFC8uOGAZCT4zhw+Djyuc7ZeCyNfa29ePxe2lGR5M8NAzA6FkLwchD6P+m/gjGG1/ae
      xZP3L7jtHb8JuR03PNt8vgAcfiBfWzt/Ot1h0ayaPB2RkCuuuwIkJ8dw8lwXKkwaxDwUkMrI
      2HP4Mp7eSMsLkvy77gpQUeXD8kVzEYqkkY+5l2/su4DNq5vhqsjX9YaQP7jhGCAWT8DldOry
      nP/zTrUPIZWRsG7hDJ2PRMiN3TAAZVYzenqD0HMGTjSZwe6DbXh2yzLaVYUY5oYB8PhqAFnS
      LQCMMfz8g3PYes886uElhrp+EBwdQ1t7J5jFqtsY4EzXMBhjWHFXnU5HICQ71wXALJihMQZf
      jV+XeRKpjIxdB9qouZ0UhOueAimyhApnFawWmy5TIX594CLuX94ED63CRgrAdQGo9NZizWp9
      +m87BiKfLW1CSCHI25RLWVHx+t5z2PHwYlp4lhSMvJ2Jb3/SgSVzAqj3u/J1SEJuKauZZ3I6
      gc7eIJyVLsTTIgJ+LyRJQm1tdrdKQ5E4znQO44Wn776jYgnJtawCYLbZ4ax0QlI1eBw2DA72
      wumph5blRtmdA+N46qGFEMCgKPmaY0rIrWXVE5ycGEFPeBJ+jxPRpIRaXxUkSYbP79OlJ5iQ
      fCmaxXEJ0QM9jiFcowAQrlEACNcoAIRrFADCNQoA4RoFgHCNAkC4RgEgXKMAEK5RAAjXKACE
      axQAwjUKAOEaBYBwjQJAuJb1RtmT0SjEZAxdvf2QJAnpdFrv2gjRXVYdYYqUQX84AkgJWCo8
      SE8Mw+7yY8a0GqiqSiu8kaKVVVO8pioID/ajqbEBAwMDCNT5IUkZmEwmCIIAgdb5IUWKeoIJ
      1+inm3CNAkC4RgEgXKMAEK5RAAjXKACEaxQAwjUKAOEaBYBwjQJAuEYBIFyjABCuUQAI1ygA
      hGsUAMI1CgDhGgWAcC2rlkhFTGFgdBLeciuGJpII+LyQZQk+n0/v+gjRVVYBsNjLYTfHEEtl
      4LaZ0d/fBadnOrxZbpRNSKHKKgBSOoFwOAy/vxoTaRn19U0QRREmQYDAGPUEk6JFTfGEazQI
      JlyjABCuUQAI1ygAhGsUAMI1CgDhGgWAcI0CQLhGASBcowAQrlEACNcoAIRrFADCNQoA4RoF
      gHCNAkC4NqUAyGIaI2PjUBQFkiTpVRMheTOljrC+rnYwuxNaJgbB7kTj9Dqoqkr7BJOiNaUz
      1+V2YWRoCDBboKmqXjURkjdTugKoigxRVmG3WcEYg9lyJQjUE0yKFTXFE67RzTvhGgWAcI0C
      QLhGASBcowAQrlEACNcoAIRrFADCNQoA4RoFgHCNAkC4RgEgXKMAEK5RAAjXstok71OR4RDC
      EykEajyQRBl1dQG96iIkL6Z0BUjLKqor7BgKBSFpdPEgxW9KZ7G70oG4wtDY2IzKMjNod2BS
      7O6oI0zTtKya4hljMJlM9Bn6TMF95v8AOTsT/loNYNgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
